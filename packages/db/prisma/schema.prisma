generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String?             @unique
  name              String?
  number            String              @unique
  password          String
  OnRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     p2pTransfer[]       @relation(name: "FromUserRelation")
  receivedTransfers p2pTransfer[]       @relation(name: "ToUserRelation")
  sentMessages      Message[]           @relation(name: "SentMessages")
  receivedMessages  Message[]           @relation(name: "ReceivedMessages")


  conversation1 Conversation[] @relation("User1")

  conversation2 Conversation[] @relation("User2")
}

model Merchant {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  auth_type AuthType
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model p2pTransfer {
  id         Int          @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  fromUser   User         @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User         @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

model Conversation {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  user1Id      Int
  user1        User         @relation("User1", fields: [user1Id], references: [id])
  user2Id      Int
  user2        User         @relation("User2", fields: [user2Id], references: [id])
  messages     Message[]
}

model Message {
  id             Int          @id @default(autoincrement())
  text           String
  createdAt      DateTime     @default(now())
  senderId       Int
  sender         User         @relation("SentMessages", fields: [senderId], references: [id])
  receiverId     Int
  receiver       User         @relation("ReceivedMessages", fields: [receiverId], references: [id])
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}


enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
